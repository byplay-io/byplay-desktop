name: Build/release
on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}
    permissions: write-all

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.mac_notarizing_api_key }}' > ~/private_keys/AuthKey_${{ secrets.mac_notarizing_api_key_id }}.p8

      - name: Build/release Electron app
        uses: byplay-io/action-electron-builder@3df89262a2c8f0fa914603b60cd4092e761a2260
        env:
          API_KEY_ID: ${{ secrets.mac_notarizing_api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.mac_notarizing_api_issuer_id }}
          APPLE_ID: ${{ secrets.mac_notarizing_apple_id }}
          APPLE_ID_PASSWORD: ${{ secrets.mac_notarizing_apple_id_password }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.mac_notarizing_apple_id_password }}
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          # release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          release: true
