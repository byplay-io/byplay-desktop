name: Build/release
on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}
    permissions: write-all

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.mac_notarizing_api_key }}' > ~/private_keys/AuthKey_${{ secrets.mac_notarizing_api_key_id }}.p8

      - name: Download CodeSign tool
        if: startsWith(matrix.os, 'win')
        run: |
          Invoke-WebRequest -Uri 'https://www.ssl.com/download/codesigntool-for-windows/' -OutFile './codesign.zip'

      - name: Extract CodeSign tool
        if: startsWith(matrix.os, 'win')
        run: |
          Expand-Archive -Path './codesign.zip' -DestinationPath '.'

      - name: Output contents of current directory
        if: startsWith(matrix.os, 'win')
        run: |
          Get-ChildItem -Path . | ForEach-Object { Write-Output $_.FullName }

      - name: Build/release Electron app
        uses: byplay-io/action-electron-builder@9120fd340db1f293bc74ba92251056a0c77fe652
        env:
          APPLE_API_KEY_ID: ${{ secrets.mac_notarizing_api_key_id }}
          APPLE_API_KEY_ISSUER_ID: ${{ secrets.mac_notarizing_api_issuer_id }}
          APPLE_API_KEY: ${{ secrets.mac_notarizing_api_key }}
          APPLE_TEAM_ID: ${{ secrets.mac_team_id }}
        with:
          windows_sign_user_name: ${{secrets.windows_sign_user_name}}
          windows_sign_user_password: ${{secrets.windows_sign_user_password}}
          windows_sign_credential_id: ${{secrets.windows_sign_credential_id}}
          windows_sign_user_totp: ${{secrets.windows_sign_user_totp}}

          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          # release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          release: true

          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
